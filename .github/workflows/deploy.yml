# .github/workflows/deploy.yml

# Nome do workflow que aparecerá no GitHub Actions
name: Deploy Frontend and Backend

# Gatilho: Este workflow roda automaticamente em qualquer push para a branch 'main'
on:
  push:
    branches:
      - main

# Define os jobs (tarefas) que serão executados
jobs:
  # --- JOB PARA O FRONTEND ---
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do seu repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Cria o arquivo .env.production para o frontend com as chaves seguras
      - name: Create .env.production file for Frontend
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_URL }}" > ./frontend/.env.production
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> ./frontend/.env.production
        shell: bash

      # 4. Instala as dependências e compila o projeto do frontend
      - name: Install and Build Frontend
        run: |
          npm ci
          npm run build
        working-directory: ./frontend

      # 5. Implanta o frontend no Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LUME_CUME }}'
          projectId: lume-cume
          channelId: live

  # --- JOB PARA O BACKEND ---
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do seu repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Autentica com o Google Cloud
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # 3. Configura a ferramenta 'gcloud'
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: lume-cume-470111

      # 4. Cria o arquivo de credenciais do Firebase Admin a partir do Secret
      - name: Create Firebase Service Account File
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > ./backend/firebase-service-account.json
        shell: bash

      # 5. Constrói a imagem Docker e envia para o Google Container Registry
      - name: Build and Push Docker image
        run: |
          gcloud builds submit ./backend \
            --tag gcr.io/lume-cume-470111/backend-api \
            --project=lume-cume-470111

      # 6. Implanta a imagem no Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy backend-api \
            --image gcr.io/lume-cume-470111/backend-api \
            --region southamerica-east1 \
            --platform managed \
            --allow-unauthenticated \
            --project=lume-cume-470111
